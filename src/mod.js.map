{"version":3,"file":"mod.js","sourceRoot":"","sources":["mod.ts"],"names":[],"mappings":"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","sourcesContent":["import rErrors = require('restify-errors');\nimport moment = require('moment');\n\nimport { Request, RequestHandlerType, Route } from 'restify';\nimport { RouteSchema, RPOptions, RouteSchemaParams, RouteSchemaParam, AllowedTypes, RequestParams } from '../types/restify-params';\nimport { Types } from 'mongoose';\n\nconst possibleTypes = ['string', 'number', 'boolean', 'date', 'id', 'object'];\n\nfunction retrieveRouteSchemaParams(calledRouteSchema: RouteSchema) : RouteSchemaParams {\n\tconst pathParams = calledRouteSchema.path.toString()\n\t\t.split('/')\n\t\t.filter(param => param[0] === ':')\n\t\t.map(param => param.slice(1));\n\treturn pathParams.reduce((params, param) : RouteSchemaParams => ({\n\t\t...params,\n\t\t[param]: {\n\t\t\t...params[param],\n\t\t\ttype: (param.toLowerCase().includes('id') && 'id') || 'string',\n\t\t\trequired: true\n\t\t}\n\t}), calledRouteSchema.params || {});\n}\n\nfunction handleParameter(parentParameters: RequestParams, pName: string, pSchema: RouteSchemaParam, ppName: string = '') : AllowedTypes {\n\tfunction handleDefault(parameter: AllowedTypes, pRequired: boolean = false, pDefaultValue: AllowedTypes = false) : AllowedTypes {\n\t\tif (!parameter) {\n\t\t\tif (pRequired && !pDefaultValue) {\n\t\t\t\tthrow new rErrors.MissingParameterError(`${pFullName} is required`);\n\t\t\t} else if (pDefaultValue) {\n\t\t\t\treturn pDefaultValue;\n\t\t\t}\n\t\t}\n\t\treturn parameter;\n\t}\n\n\tlet {\n\t\ttype: pType, required: pRequired,\n\t\tdefaultValue: pDefaultValue, expected: pExpected,\n\t\tparams: pParams,\n\t} = pSchema;\n\n\tconst pFullName = `${ppName}${(!ppName.endsWith(']') && pName) || ''}`;\n\n\tif (pExpected && !Array.isArray(pExpected)) {\n\t\tpExpected = [pExpected];\n\t}\n\n\tconst parameterValue = handleDefault(parentParameters[pName], pRequired, pDefaultValue);\n\n\treturn parameterValue;\n}\n\nmodule.exports = function(options: RPOptions = { trimStrings: true }) : RequestHandlerType {\n\treturn (req, res, next) => {\n\t\ttry {\n\t\t\tif (req.getContentLength() > 0 && !Object.keys(req.params).length) {\n\t\t\t\treturn next(new rErrors.InternalError('You must use restify plugins \"queryParser\" and \"bodyParser\" for Restify-Params to work correctly'));\n\t\t\t}\n\n\t\t\tconst schemaParameters = retrieveRouteSchemaParams(req.getRoute().spec);\n\n\t\t\tif (!Object.keys(schemaParameters).length) {\n\t\t\t\treq.params = {};\n\t\t\t\treturn next();\n\t\t\t}\n\n\t\t\tconst parameters = Object.entries(schemaParameters).reduce((params: RequestParams, [paramName, paramSchema]) : RequestParams => {\n\t\t\t\tconst paramHandled = handleParameter(req.params, paramName, paramSchema);\n\n\t\t\t\tif (!paramHandled) {\n\t\t\t\t\treturn params;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\t...params,\n\t\t\t\t\t[paramName]: paramHandled,\n\t\t\t\t};\n\t\t\t}, {});\n\n\t\t\treq.params = parameters;\n\t\t\treturn next();\n\t\t} catch (err) {\n\t\t\treturn next(err);\n\t\t}\n\t};\n};\n"]}